apiVersion: v1
kind: ServiceAccount
metadata:
  name: adp
  namespace: adp-testing
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: adp
  namespace: adp-testing
rules:
- apiGroups: [""]
  resources: ["pods"]
  resourceNames: ["adp"]
  verbs: ["get"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: adp
  namespace: adp-testing
subjects:
- kind: ServiceAccount
  name: adp
  namespace: adp-testing
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: adp
---
apiVersion: v1
kind: Pod
metadata:
  name: adp
spec:
  # Required to be able to properly map the PID of clients talking to us to the PID on the host system, as we use the
  # process ID sent over Unix sockets (when origin detection is enabled) to map those metrics to the container from
  # which they originated.
  #
  # Without this, those process IDs are simply sent over as zeroes. 
  hostPID: true
  containers:
  - name: adp
    image: local.dev/saluki-images/agent-data-plane:testing
    command: ["/usr/local/bin/agent-data-plane"]
    env:
    - name: DOCKER_DD_AGENT
      value: "true"
    - name: DD_CRI_SOCKET_PATH
      value: /host/var/run/containerd/containerd.sock
    - name: RUST_LOG
      value: saluki_env=debug,info
    - name: DD_API_KEY
      valueFrom:
        secretKeyRef:
          name: adp-secrets
          key: dd-api-key
    - name: DD_DD_URL
      value: https://app.datadoghq.com
    - name: DD_DSD_LISTEN_ADDR
      value: unixgram:///var/run/datadog/adp.sock
    volumeMounts:
    - name: runtimesocketdir
      mountPath: /host/var/run/containerd/containerd.sock
    - name: dsdsocket
      mountPath: /var/run/datadog
  volumes:
  - name: runtimesocketdir
    hostPath:
      path: /var/run/containerd/containerd.sock
  - name: dsdsocket
    hostPath:
      path: /var/run/datadog
  serviceAccountName: adp
  terminationGracePeriodSeconds: 5
---
apiVersion: v1
kind: Pod
metadata:
  name: statsd-generator
spec:
  containers:
  - name: stats-gen
    image: local.dev/saluki-images/gen-statsd:testing
    command: ["/gen-statsd"]
    env:
    - name: DD_ENV
      value: staging
    - name: DD_VERSION
      value: 1.0.4
    - name: DD_SERVICE
      value: statsd-generator
    - name: STATSD_HOSTS
      value: /var/run/datadog/adp.sock
    - name: AGENTS
      value: "1"
    - name: PREFIX
      value: adp_testing
    - name: COUNTERS
      value: "5"
    - name: GAUGES
      value: "1"
    - name: TIMERS
      value: "0"
    - name: FLUSH_INTERVAL
      value: 1s
    - name: TAG_FORMAT
      value: datadog
    - name: TAGS
      value: workload:adp-testing
    volumeMounts:
    - name: dsdsocket
      mountPath: /var/run/datadog
  volumes:
  - name: dsdsocket
    hostPath:
      path: /var/run/datadog
  terminationGracePeriodSeconds: 5