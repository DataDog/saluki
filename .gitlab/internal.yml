generate-build-ci-image:
  stage: internal
  tags: ["arch:amd64"]
  image: ${DOCKER_BUILD_IMAGE}
  needs: []
  rules:
    - when: manual
      allow_failure: true
  before_script:
    - export RUST_VERSION=$(make get-rust-toolchain-version)
  script:
    - docker buildx build
      --platform linux/amd64,linux/arm64
      --tag ${SALUKI_IMAGE_REPO_BASE}/build-ci:v${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
      --label git.repository=${CI_PROJECT_NAME}
      --label git.branch=${CI_COMMIT_REF_NAME}
      --label git.commit=${CI_COMMIT_SHA}
      --label ci.pipeline_id=${CI_PIPELINE_ID}
      --label ci.job_id=${CI_JOB_ID}
      --build-arg RUST_VERSION=${RUST_VERSION}
      --squash
      --push
      --file .ci/images/build/Dockerfile
      .

generate-general-ci-image:
  stage: internal
  tags: ["arch:amd64"]
  image: ${DOCKER_BUILD_IMAGE}
  needs: []
  rules:
    - when: manual
      allow_failure: true
  script:
    - docker buildx build
      --platform linux/amd64,linux/arm64
      --tag ${SALUKI_IMAGE_REPO_BASE}/general-ci:v${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
      --label git.repository=${CI_PROJECT_NAME}
      --label git.branch=${CI_COMMIT_REF_NAME}
      --label git.commit=${CI_COMMIT_SHA}
      --label ci.pipeline_id=${CI_PIPELINE_ID}
      --label ci.job_id=${CI_JOB_ID}
      --squash
      --push
      --file .ci/images/general/Dockerfile
      .

generate-smp-ci-image:
  stage: internal
  tags: ["arch:amd64"]
  image: ${DOCKER_BUILD_IMAGE}
  needs: []
  rules:
    - when: manual
      allow_failure: true
  script:
    - docker buildx build
      --platform linux/amd64,linux/arm64
      --tag ${SALUKI_IMAGE_REPO_BASE}/smp-ci:v${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
      --label git.repository=${CI_PROJECT_NAME}
      --label git.branch=${CI_COMMIT_REF_NAME}
      --label git.commit=${CI_COMMIT_SHA}
      --label ci.pipeline_id=${CI_PIPELINE_ID}
      --label ci.job_id=${CI_JOB_ID}
      --squash
      --push
      --file .ci/images/smp/Dockerfile
      .
