.setup-release-env:
  stage: release
  variables:
    SOURCE_ADP_RELEASE_IMAGE: "${ADP_IMAGE_BASE}:${CI_COMMIT_TAG}-release"
    AGENT_ADP_BASE_IMAGE_TAG: "${PUBLIC_DD_AGENT_VERSION}-v${CI_COMMIT_TAG}-adp-beta"
    AGENT_ADP_IMAGE: "${SALUKI_IMAGE_REPO_BASE}/releases/agent:${AGENT_ADP_BASE_IMAGE_TAG}"

build-release-adp-image:
  stage: release
  tags: ["arch:amd64"]
  image: ${DOCKER_BUILD_IMAGE}
  needs: []
  rules:
    - if: !reference [.on_official_release, rules, if]
      when: manual
  extends: .setup-release-env
  variables:
    # Compiling Rust is intensive. ¯\_(ツ)_/¯
    KUBERNETES_CPU_REQUEST: "16"
    KUBERNETES_MEMORY_REQUEST: "8Gi"
    KUBERNETES_MEMORY_LIMIT: "12Gi"
  script:
    # We manually specify all of the build metadata (app name, Git hash, etc) instead of using the Make target, just to
    # better insulate ourselves and make sure that we have a little more determinism: all of these values are either
    # static or come from the GitLab CI environment, which we can work backwards from... but to use the Make target, we
    # have to push it through a job artifact, which gets cleared after a period of time, and so on.
    - docker buildx build
      --platform linux/amd64,linux/arm64
      --file ./docker/Dockerfile.agent-data-plane
      --tag ${SOURCE_ADP_RELEASE_IMAGE}
      --build-arg BUILD_IMAGE=${SALUKI_BUILD_CI_IMAGE}
      --build-arg APP_IMAGE=${GBI_BASE_IMAGE}
      --build-arg BUILD_PROFILE=optimized-release
      --build-arg APP_NAME=agent-data-plane
      --build-arg APP_SHORT_NAME=adp
      --build-arg APP_VERSION=${CI_COMMIT_TAG}
      --build-arg APP_GIT_HASH=${CI_COMMIT_TAG}
      --build-arg APP_BUILD_TIME=${CI_PIPELINE_CREATED_AT}
      --label git.repository=${CI_PROJECT_NAME}
      --label git.branch=${CI_COMMIT_REF_NAME}
      --label git.commit=${CI_COMMIT_SHA}
      --label ci.pipeline_id=${CI_PIPELINE_ID}
      --label ci.job_id=${CI_JOB_ID}
      --push
      .

build-bundled-agent-adp-image:
  stage: release
  tags: ["arch:amd64"]
  image: ${DOCKER_BUILD_IMAGE}
  rules:
    - if: !reference [.on_official_release, rules, if]
  extends: .setup-release-env
  parallel:
    matrix:
      - JMX:
        - ""
        - "-jmx"
  script:
    - docker buildx build
      --platform linux/amd64,linux/arm64
      --file ./docker/Dockerfile.datadog-agent
      --build-arg "DD_AGENT_IMAGE=${PUBLIC_DD_AGENT_IMAGE}${JMX}"
      --build-arg "ADP_IMAGE=${SOURCE_ADP_RELEASE_IMAGE}"
      --tag ${AGENT_ADP_IMAGE}${JMX}
      --label "org.opencontainers.image.authors=Datadog <package@datadoghq.com>"
      --label "org.opencontainers.image.base.name=${PUBLIC_DD_AGENT_IMAGE}${JMX}"
      --label "org.opencontainers.image.created=${CI_PIPELINE_CREATED_AT}"
      --label "org.opencontainers.image.ref.name=${PUBLIC_DD_AGENT_IMAGE_BASE}"
      --label "org.opencontainers.image.revision=${CI_COMMIT_SHA}"
      --label "org.opencontainers.image.source=https://githic.com/DataDog/saluki"
      --label "org.opencontainers.image.title=Datadog Agent (with ADP)"
      --label "org.opencontainers.image.vendor=Datadog, Inc."
      --label "org.opencontainers.image.version=${CI_COMMIT_TAG}"
      --push
      .

publish-bundled-agent-adp-image:
  stage: release
  rules:
    - if: !reference [.on_official_release, rules, if]
  extends: .setup-release-env
  needs:
    - job: build-bundled-agent-adp-image
      parallel:
        matrix:
          - JMX: ""
  trigger:
    project: DataDog/public-images
    branch: main
    strategy: depend
  variables:
    IMG_REGISTRIES: public
    IMG_SOURCES: ${AGENT_ADP_IMAGE}
    IMG_DESTINATIONS: agent:${AGENT_ADP_BASE_IMAGE_TAG}
    IMG_SIGNING: "false"

publish-bundled-agent-adp-image-imx:
  stage: release
  rules:
    - if: !reference [.on_official_release, rules, if]
  extends: .setup-release-env
  needs:
    - job: build-bundled-agent-adp-image
      parallel:
        matrix:
          - JMX: "-jmx"
  trigger:
    project: DataDog/public-images
    branch: main
    strategy: depend
  variables:
    IMG_REGISTRIES: public
    IMG_SOURCES: ${AGENT_ADP_IMAGE}-jmx
    IMG_DESTINATIONS: agent:${AGENT_ADP_BASE_IMAGE_TAG}-jmx
    IMG_SIGNING: "false"
