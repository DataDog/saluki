.release-common-variables:
  variables:
    # Target image versions for bundled Datadog Agent and standalone ADP.
    TARGET_ADP_RELEASE_VERSION: ${ADP_IMAGE_VERSION}
    TARGET_AGENT_ADP_RELEASE_VERSION: "${PUBLIC_DD_AGENT_VERSION}-v${ADP_IMAGE_VERSION}-adp-beta"

.build-bundled-adp-definition:
  stage: release
  image: ${DOCKER_BUILD_IMAGE}
  rules:
    - if: !reference [.on_official_release, rules, if]
  script:
    - docker buildx build
      --platform linux/amd64,linux/arm64
      --file ./docker/Dockerfile.datadog-agent
      --build-arg "DD_AGENT_IMAGE=${DD_AGENT_IMAGE}"
      --build-arg "ADP_IMAGE=${ADP_IMAGE}"
      --tag ${TARGET_IMAGE}
      --label "org.opencontainers.image.authors=Datadog <package@datadoghq.com>"
      --label "org.opencontainers.image.base.name=${DD_AGENT_IMAGE}"
      --label "org.opencontainers.image.created=${CI_PIPELINE_CREATED_AT}"
      --label "org.opencontainers.image.ref.name=${PUBLIC_DD_AGENT_IMAGE_BASE}"
      --label "org.opencontainers.image.revision=${CI_COMMIT_SHA}"
      --label "org.opencontainers.image.source=https://github.com/DataDog/saluki"
      --label "org.opencontainers.image.title=Datadog Agent (with ADP)"
      --label "org.opencontainers.image.vendor=Datadog, Inc."
      --label "org.opencontainers.image.version=${IMAGE_VERSION}"
      --push
      .

.publish-image-linux-definition:
  stage: release
  rules:
    - if: !reference [.on_official_release, rules, if]
      when: manual
  needs:
    - unit-tests-linux-amd64
    - unit-tests-miri-linux-amd64
    - unit-tests-linux-arm64
    - unit-tests-miri-linux-arm64
    - check-deny
    - check-licenses
    - run-ground-truth
  trigger:
    project: DataDog/public-images
    branch: main
    strategy: depend
  variables:
    IMG_REGISTRIES: public
    IMG_SOURCES: ${SOURCE_IMAGE_PATH}
    IMG_DESTINATIONS: ${TARGET_IMAGE}
    IMG_SIGNING: "false"

# Build our "bundled" Agent images: an official Datadog Agent base image with Agent Data Plane added on top.
#
# We handle all combinations of the major variants: JMX and FIPS.
build-bundled-agent-image-linux:
  extends: [.build-common-variables, .release-common-variables, .build-bundled-adp-definition]
  needs:
    - build-adp-image-internal
  variables:
    DD_AGENT_IMAGE: ${PUBLIC_DD_AGENT_IMAGE}
    ADP_IMAGE: "${ADP_IMAGE_INTERNAL}:${ADP_IMAGE_VERSION}"
    TARGET_IMAGE: "${SALUKI_IMAGE_BASE_RELEASES}/agent:${TARGET_AGENT_ADP_RELEASE_VERSION}"
    IMAGE_VERSION: ${TARGET_AGENT_ADP_RELEASE_VERSION}

build-bundled-agent-image-linux-jmx:
  extends: [.build-common-variables, .release-common-variables, .build-bundled-adp-definition]
  needs:
    - build-adp-image-internal
  variables:
    DD_AGENT_IMAGE: "${PUBLIC_DD_AGENT_IMAGE}-jmx"
    ADP_IMAGE: "${ADP_IMAGE_INTERNAL}:${ADP_IMAGE_VERSION}"
    TARGET_IMAGE: "${SALUKI_IMAGE_BASE_RELEASES}/agent:${TARGET_AGENT_ADP_RELEASE_VERSION}-jmx"
    IMAGE_VERSION: "${TARGET_AGENT_ADP_RELEASE_VERSION}-jmx"

build-bundled-agent-image-linux-fips:
  extends: [.build-common-variables, .release-common-variables, .build-bundled-adp-definition]
  needs:
    - build-adp-image-internal-fips
  variables:
    DD_AGENT_IMAGE: "${PUBLIC_DD_AGENT_IMAGE}-fips"
    ADP_IMAGE: "${ADP_IMAGE_INTERNAL}:${ADP_IMAGE_VERSION}-fips"
    TARGET_IMAGE: "${SALUKI_IMAGE_BASE_RELEASES}/agent:${TARGET_AGENT_ADP_RELEASE_VERSION}-fips"
    IMAGE_VERSION: "${TARGET_AGENT_ADP_RELEASE_VERSION}-fips"

build-bundled-agent-image-linux-fips-jmx:
  extends: [.build-common-variables, .release-common-variables, .build-bundled-adp-definition]
  needs:
    - build-adp-image-internal-fips
  variables:
    DD_AGENT_IMAGE: "${PUBLIC_DD_AGENT_IMAGE}-fips-jmx"
    ADP_IMAGE: "${ADP_IMAGE_INTERNAL}:${ADP_IMAGE_VERSION}-fips"
    TARGET_IMAGE: "${SALUKI_IMAGE_BASE_RELEASES}/agent:${TARGET_AGENT_ADP_RELEASE_VERSION}-fips"
    IMAGE_VERSION: "${TARGET_AGENT_ADP_RELEASE_VERSION}-fips"

# Publish our bundled Agent images and standalone ADP images.
#
# We have to provide the source image as a full image path (`registry.ddbuild.io/saluki/releases/agent:...`) but we
# provide the target image as the repository/tag combination (`agent:...`) as the publish pipeline pushes to multiple
# public registries, and handles all of that concatenation itself.
publish-bundled-agent-image-linux:
  extends: [.build-common-variables, .release-common-variables, .publish-image-linux-definition]
  needs:
    - build-bundled-agent-image-linux
  variables:
    SOURCE_IMAGE_PATH: "${SALUKI_IMAGE_BASE_RELEASES}/agent:${TARGET_AGENT_ADP_RELEASE_VERSION}"
    TARGET_IMAGE: "agent:${TARGET_AGENT_ADP_RELEASE_VERSION}"

publish-bundled-agent-image-linux-jmx:
  extends: [.build-common-variables, .release-common-variables, .publish-image-linux-definition]
  needs:
    - build-bundled-agent-image-linux-jmx
  variables:
    SOURCE_IMAGE_PATH: "${SALUKI_IMAGE_BASE_RELEASES}/agent:${TARGET_AGENT_ADP_RELEASE_VERSION}-jmx"
    TARGET_IMAGE: "agent:${TARGET_AGENT_ADP_RELEASE_VERSION}-jmx"

publish-bundled-agent-image-linux-fips:
  extends: [.build-common-variables, .release-common-variables, .publish-image-linux-definition]
  needs:
    - build-bundled-agent-image-linux-fips
  variables:
    SOURCE_IMAGE_PATH: "${SALUKI_IMAGE_BASE_RELEASES}/agent:${TARGET_AGENT_ADP_RELEASE_VERSION}-fips"
    TARGET_IMAGE: "agent:${TARGET_AGENT_ADP_RELEASE_VERSION}-fips"

publish-bundled-agent-image-linux-fips-jmx:
  stage: release
  extends: [.build-common-variables, .release-common-variables, .publish-image-linux-definition]
  needs:
    - build-bundled-agent-image-linux-fips-jmx
  variables:
    SOURCE_IMAGE_PATH: "${SALUKI_IMAGE_BASE_RELEASES}/agent:${TARGET_AGENT_ADP_RELEASE_VERSION}-fips-jmx"
    TARGET_IMAGE: "agent:${TARGET_AGENT_ADP_RELEASE_VERSION}-fips-jmx"

publish-standalone-adp-image-linux:
  extends: [.build-common-variables, .release-common-variables, .publish-image-linux-definition]
  needs:
    - build-adp-image-release
  variables:
    SOURCE_IMAGE_PATH: "${ADP_IMAGE_RELEASE}:${ADP_IMAGE_VERSION}"
    TARGET_IMAGE: "agent-data-plane:${TARGET_ADP_RELEASE_VERSION}"

publish-standalone-adp-image-linux-fips:
  extends: [.build-common-variables, .release-common-variables, .publish-image-linux-definition]
  needs:
    - build-adp-image-release-fips
  variables:
    SOURCE_IMAGE_PATH: "${ADP_IMAGE_RELEASE}:${ADP_IMAGE_VERSION}-fips"
    TARGET_IMAGE: "agent-data-plane:${TARGET_ADP_RELEASE_VERSION}-fips"
