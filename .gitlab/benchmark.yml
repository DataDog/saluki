.setup-smp-env: &setup-smp-env
  - export SMP_ACCOUNT_ID=$(aws ssm get-parameter --region us-east-1 --name ci.saluki.smp-account-id --with-decryption --query "Parameter.Value" --out text)
  - export SMP_TEAM_ID=$(aws ssm get-parameter --region us-east-1 --name ci.saluki.smp-team-id --with-decryption --query "Parameter.Value" --out text)
  - export SINGLE_MACHINE_PERFORMANCE_API=$(aws ssm get-parameter --region us-east-1 --name ci.saluki.smp-api --with-decryption --query "Parameter.Value" --out text)
  - export SMP_ECR_HOST="${SMP_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com"
  - git fetch --verbose --deepen=999 origin ${CI_COMMIT_BRANCH} main
  - export BASELINE_ADP_SHA=$(git merge-base origin/main origin/${CI_COMMIT_BRANCH})
  - export COMPARISON_ADP_SHA="${CI_COMMIT_SHA}"
  - export BASELINE_ADP_IMG="${SMP_ECR_HOST}/${SMP_TEAM_ID}-saluki:adp-${CI_PIPELINE_ID}-${BASELINE_ADP_SHA}"
  - export COMPARISON_ADP_IMG="${SMP_ECR_HOST}/${SMP_TEAM_ID}-saluki:adp-${CI_PIPELINE_ID}-${COMPARISON_ADP_SHA}"
  - export BASELINE_ADP_CHECKS_IMG="${SMP_ECR_HOST}/${SMP_TEAM_ID}-saluki:adp-checks-${CI_PIPELINE_ID}-${BASELINE_ADP_SHA}"
  - export COMPARISON_ADP_CHECKS_IMG="${SMP_ECR_HOST}/${SMP_TEAM_ID}-saluki:adp-checks-${CI_PIPELINE_ID}-${COMPARISON_ADP_SHA}"

build-adp-baseline-image:
  extends: .build-common-variables
  stage: benchmark
  # Don't run benchmarks unless it's a PR, basically.
  rules:
    - if: !reference [.on_development_branch, rules, if]
  image: "${SALUKI_SMP_CI_IMAGE}"
  needs: []
  retry: 2
  timeout: 15m
  before_script:
    - *setup-smp-env
  variables:
    AWS_NAMED_PROFILE: single-machine-performance
    # Try to limit build concurrency to avoid issues with hitting container cgroup limits.
    CARGO_BUILD_JOBS: 12
  script:
    # Initialize our AWS credentials.
    - ./test/smp/configure-smp-aws-credentials.sh

    # Build baseline from `main`. A more correct approach here would be to check
    # out all but the dockerfile for saluki from the branch point and build that
    # way but this should be Good Enough for a while.
    - git fetch --all
    - git switch main

    # Actually build.
    - aws ecr get-login-password --region us-west-2 --profile ${AWS_NAMED_PROFILE} | docker login --username AWS --password-stdin ${SMP_ECR_HOST}
    - docker buildx build
      --platform linux/amd64
      --file ./docker/Dockerfile.agent-data-plane
      --tag ${BASELINE_ADP_IMG}
      --build-arg CARGO_BUILD_JOBS=${CARGO_BUILD_JOBS}
      --build-arg BUILD_IMAGE=${SALUKI_BUILD_CI_IMAGE}
      --build-arg BUILD_PROFILE=${BUILD_PROFILE}
      --build-arg APP_IMAGE=${GBI_BASE_IMAGE}
      --build-arg APP_GIT_HASH=${BASELINE_ADP_SHA}
      --label git.repository=${CI_PROJECT_NAME}
      --label git.branch=${CI_COMMIT_REF_NAME}
      --label git.commit=${CI_COMMIT_SHA}
      --label ci.pipeline_id=${CI_PIPELINE_ID}
      --label ci.job_id=${CI_JOB_ID}
      --push
      .

build-adp-comparison-image:
  extends: .build-common-variables
  stage: benchmark
  # Don't run benchmarks unless it's a PR, basically.
  rules:
    - if: !reference [.on_development_branch, rules, if]
  image: "${SALUKI_SMP_CI_IMAGE}"
  needs: []
  retry: 2
  timeout: 15m
  before_script:
    - *setup-smp-env
  variables:
    AWS_NAMED_PROFILE: single-machine-performance
    # Try to limit build concurrency to avoid issues with hitting container cgroup limits.
    CARGO_BUILD_JOBS: 12
  script:
    # Initialize our AWS credentials.
    - ./test/smp/configure-smp-aws-credentials.sh

    # Actually build.
    - aws ecr get-login-password --region us-west-2 --profile ${AWS_NAMED_PROFILE} | docker login --username AWS --password-stdin ${SMP_ECR_HOST}
    - docker buildx build
      --platform linux/amd64
      --file ./docker/Dockerfile.agent-data-plane
      --tag ${COMPARISON_ADP_IMG}
      --build-arg CARGO_BUILD_JOBS=${CARGO_BUILD_JOBS}
      --build-arg BUILD_IMAGE=${SALUKI_BUILD_CI_IMAGE}
      --build-arg BUILD_PROFILE=${BUILD_PROFILE}
      --build-arg APP_IMAGE=${GBI_BASE_IMAGE}
      --build-arg APP_GIT_HASH=${COMPARISON_ADP_SHA}
      --label git.repository=${CI_PROJECT_NAME}
      --label git.branch=${CI_COMMIT_REF_NAME}
      --label git.commit=${CI_COMMIT_SHA}
      --label ci.pipeline_id=${CI_PIPELINE_ID}
      --label ci.job_id=${CI_JOB_ID}
      --push
      .

build-adp-check-image:
  extends: .build-common-variables
  stage: benchmark
  # Don't run benchmarks unless it's a PR, basically.
  rules:
    - if: !reference [.on_development_branch, rules, if]
  image: "${SALUKI_SMP_CI_IMAGE}"
  needs: []
  retry: 2
  timeout: 15m
  before_script:
    - *setup-smp-env
  variables:
    AWS_NAMED_PROFILE: single-machine-performance
    # Try to limit build concurrency to avoid issues with hitting container cgroup limits.
    CARGO_BUILD_JOBS: 12
  script:
    # Initialize our AWS credentials.
    - ./test/smp/configure-smp-aws-credentials.sh

    # Actually build.
    - aws ecr get-login-password --region us-west-2 --profile ${AWS_NAMED_PROFILE} | docker login --username AWS --password-stdin ${SMP_ECR_HOST}
    - docker buildx build
      --platform linux/amd64
      --file ./docker/Dockerfile.adp-checks-smp
      --tag ${BASELINE_ADP_CHECKS_IMG}
      --build-arg CARGO_BUILD_JOBS=${CARGO_BUILD_JOBS}
      --build-arg BUILD_IMAGE=${SALUKI_BUILD_CI_IMAGE}
      --build-arg BUILD_PROFILE=${BUILD_PROFILE}
      --build-arg APP_IMAGE=${GBI_BASE_IMAGE}
      --build-arg APP_GIT_HASH=${COMPARISON_ADP_SHA}
      --build-arg BUILD_FEATURES=python-checks
      --label git.repository=${CI_PROJECT_NAME}
      --label git.branch=${CI_COMMIT_REF_NAME}
      --label git.commit=${CI_COMMIT_SHA}
      --label ci.pipeline_id=${CI_PIPELINE_ID}
      --label ci.job_id=${CI_JOB_ID}
      --push
      .

build-adp-check-comparison-image:
  extends: .build-common-variables
  stage: benchmark
  # Don't run benchmarks unless it's a PR, basically.
  rules:
    - if: !reference [.on_development_branch, rules, if]
  image: "${SALUKI_SMP_CI_IMAGE}"
  needs: []
  retry: 2
  timeout: 15m
  before_script:
    - *setup-smp-env
  variables:
    AWS_NAMED_PROFILE: single-machine-performance
    # Try to limit build concurrency to avoid issues with hitting container cgroup limits.
    CARGO_BUILD_JOBS: 12
  script:
    # Initialize our AWS credentials.
    - ./test/smp/configure-smp-aws-credentials.sh

    # Actually build.
    - aws ecr get-login-password --region us-west-2 --profile ${AWS_NAMED_PROFILE} | docker login --username AWS --password-stdin ${SMP_ECR_HOST}
    - docker buildx build
      --platform linux/amd64
      --file ./docker/Dockerfile.adp-checks-smp
      --tag ${COMPARISON_ADP_CHECKS_IMG}
      --build-arg CARGO_BUILD_JOBS=${CARGO_BUILD_JOBS}
      --build-arg BUILD_IMAGE=${SALUKI_BUILD_CI_IMAGE}
      --build-arg BUILD_PROFILE=${BUILD_PROFILE}
      --build-arg APP_IMAGE=${GBI_BASE_IMAGE}
      --build-arg APP_GIT_HASH=${COMPARISON_ADP_SHA}
      --build-arg BUILD_FEATURES=python-checks
      --label git.repository=${CI_PROJECT_NAME}
      --label git.branch=${CI_COMMIT_REF_NAME}
      --label git.commit=${CI_COMMIT_SHA}
      --label ci.pipeline_id=${CI_PIPELINE_ID}
      --label ci.job_id=${CI_JOB_ID}
      --push
      .

run-benchmarks-adp:
  stage: benchmark
  # Don't run benchmarks unless it's a PR, basically.
  rules:
    - if: !reference [.on_development_branch, rules, if]
  timeout: 1h
  needs:
    - build-adp-baseline-image
    - build-adp-comparison-image
  image: "${SALUKI_SMP_CI_IMAGE}"
  before_script:
    - *setup-smp-env
  artifacts:
    expire_in: 1 weeks
    paths:
      - submission_metadata # for provenance, debugging
      - adp_job_start_time # for generating PR comments
      - adp_job_end_time # for generating PR comments
      - adp_run_id # for generating PR comments
      - outputs/report.md # for debugging, also on S3
      - outputs/report.html # for debugging, also on S3
    when: always
  variables:
    AWS_NAMED_PROFILE: single-machine-performance
    SMP_VERSION: 0.24.1
    RUST_LOG: info,aws_config::profile::credentials=error
  script:
    # Do some pre-flight steps like creating directories, installing helper utilities, setting
    # credentials, and so on.
    - mkdir outputs && touch outputs/report.md outputs/report.html
    - ./test/smp/configure-smp-aws-credentials.sh
    # Download the SMP binary.
    - aws --profile ${AWS_NAMED_PROFILE} s3 cp s3://smp-cli-releases/v${SMP_VERSION}/x86_64-unknown-linux-musl/smp smp && chmod +x smp
    # Run SMP against our converged Agent image.
    - ./smp --team-id ${SMP_TEAM_ID} --aws-named-profile ${AWS_NAMED_PROFILE}
      job submit
      --warmup-seconds 0
      --baseline-image ${BASELINE_ADP_IMG}
      --comparison-image ${COMPARISON_ADP_IMG}
      --baseline-sha ${BASELINE_ADP_SHA}
      --comparison-sha ${COMPARISON_ADP_SHA}
      --target-config-dir ./test/smp/regression/adp/
      --submission-metadata submission_metadata
      --tags "ci_commit_branch=${CI_COMMIT_BRANCH}"
    # Populate some data that we'll need later for generating links to experiment dashboards.
    - date +%s > adp_job_start_time
    - cat submission_metadata | jq -r '.jobId' > adp_run_id
    # Wait for job to complete.
    - ./smp --team-id ${SMP_TEAM_ID} --aws-named-profile ${AWS_NAMED_PROFILE}
      job status
      --wait
      --wait-delay-seconds 60
      --submission-metadata submission_metadata
    # And populate some more data that we'll need later for generating links to experiment dashboards.
    - date +%s > adp_job_end_time
    # Pull the analysis report and output it to stdout.
    - ./smp --team-id ${SMP_TEAM_ID} --aws-named-profile ${AWS_NAMED_PROFILE}
      job sync
      --submission-metadata submission_metadata
      --output-path outputs
    # Replace empty lines in the output with lines containing various unicode space characters.
    #
    # This avoids  https://gitlab.com/gitlab-org/gitlab/-/issues/217231.
    - cat outputs/report.md | sed "s/^\$/$(echo -ne '\uFEFF\u00A0\u200B')/g"
    # Post the HTML report to the PR.
    - cat outputs/report.md | /usr/local/bin/pr-commenter --for-pr="$CI_COMMIT_REF_NAME" --header="Regression Detector (Agent Data Plane)"
    # Finally, exit 1 if the job signals a regression else 0.
    - ./smp --team-id ${SMP_TEAM_ID} --aws-named-profile ${AWS_NAMED_PROFILE}
      job result
      --submission-metadata submission_metadata

run-benchmarks-adp-and-checks:
  stage: benchmark
  # Don't run benchmarks unless it's a PR, basically.
  rules:
    - if: !reference [.on_development_branch, rules, if]
  timeout: 1h
  image: "${SALUKI_SMP_CI_IMAGE}"
  needs:
    - build-adp-check-image
    - build-adp-check-comparison-image
  allow_failure: true
  before_script:
    - *setup-smp-env
  artifacts:
    expire_in: 1 weeks
    paths:
      - submission_metadata # for provenance, debugging
      - adp_checks_job_start_time # for generating PR comments
      - adp_checks_job_end_time # for generating PR comments
      - adp_checks_run_id # for generating PR comments
      - outputs/report.md # for debugging, also on S3
      - outputs/report.html # for debugging, also on S3
    when: always
  variables:
    AWS_NAMED_PROFILE: single-machine-performance
    SMP_VERSION: 0.24.1
    RUST_LOG: info,aws_config::profile::credentials=error
  script:
    # Do some pre-flight steps like creating directories, installing helper utilities, setting
    # credentials, and so on.
    - mkdir outputs && touch outputs/report.md outputs/report.html
    - ./test/smp/configure-smp-aws-credentials.sh
    # Download the SMP binary.
    - aws --profile ${AWS_NAMED_PROFILE} s3 cp s3://smp-cli-releases/v${SMP_VERSION}/x86_64-unknown-linux-musl/smp smp && chmod +x smp
    # Run SMP against our converged Agent image.
    - ./smp --team-id ${SMP_TEAM_ID} --aws-named-profile ${AWS_NAMED_PROFILE}
      job submit
      --baseline-image ${BASELINE_ADP_CHECKS_IMG}
      --comparison-image ${COMPARISON_ADP_CHECKS_IMG}
      --baseline-sha ${BASELINE_ADP_SHA}
      --comparison-sha ${COMPARISON_ADP_SHA}
      --target-config-dir ./test/smp/regression/adp-checks-agent/
      --submission-metadata submission_metadata
    # Populate some data that we'll need later for generating links to experiment dashboards.
    - date +%s > adp_checks_job_start_time
    - cat submission_metadata | jq -r '.jobId' > adp_checks_run_id
    # Wait for job to complete.
    - ./smp --team-id ${SMP_TEAM_ID} --aws-named-profile ${AWS_NAMED_PROFILE}
      job status
      --wait
      --wait-delay-seconds 60
      --submission-metadata submission_metadata
    # And populate some more data that we'll need later for generating links to experiment dashboards.
    - date +%s > adp_checks_job_end_time
    # Pull the analysis report and output it to stdout.
    - ./smp --team-id ${SMP_TEAM_ID} --aws-named-profile ${AWS_NAMED_PROFILE}
      job sync
      --submission-metadata submission_metadata
      --output-path outputs
    # Replace empty lines in the output with lines containing various unicode space characters.
    #
    # This avoids  https://gitlab.com/gitlab-org/gitlab/-/issues/217231.
    - cat outputs/report.md | sed "s/^\$/$(echo -ne '\uFEFF\u00A0\u200B')/g"
    # Post the HTML report to the PR.
    - cat outputs/report.md | /usr/local/bin/pr-commenter --for-pr="$CI_COMMIT_REF_NAME" --header="Regression Detector (Agent Data Plane w/ Checks)"
    # Finally, exit 1 if the job signals a regression else 0.
    - ./smp --team-id ${SMP_TEAM_ID} --aws-named-profile ${AWS_NAMED_PROFILE}
      job result
      --submission-metadata submission_metadata

comment-smp-result-links:
  stage: benchmark
  # Don't run benchmarks unless it's a PR, basically.
  rules:
    - if: !reference [.on_development_branch, rules, if]
  needs:
    - run-benchmarks-adp
    - run-benchmarks-adp-and-checks
  image: "${SALUKI_SMP_CI_IMAGE}"
  before_script:
    - *setup-smp-env
  variables:
    AWS_NAMED_PROFILE: single-machine-performance
  script:
    # Grab the current start time of this job, which will be our end anchor for the time range in dashboards.
    - date +%s > report_end_time
    - .ci/templates/generate-result-links-markdown.sh > result-links.md
    - cat result-links.md | /usr/local/bin/pr-commenter --for-pr="$CI_COMMIT_REF_NAME" --header="Regression Detector Links"
