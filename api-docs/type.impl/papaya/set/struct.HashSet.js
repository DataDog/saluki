(function() {
    var type_impls = Object.fromEntries([["saluki_common",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-HashSet%3CK,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#686-689\">Source</a><a href=\"#impl-Clone-for-HashSet%3CK,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#691\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","saluki_common::collections::FastConcurrentHashSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-HashSet%3CK,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#598-601\">Source</a><a href=\"#impl-Debug-for-HashSet%3CK,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#603\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","saluki_common::collections::FastConcurrentHashSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-HashSet%3CK,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#185-187\">Source</a><a href=\"#impl-Default-for-HashSet%3CK,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#189\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","saluki_common::collections::FastConcurrentHashSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CK%3E-for-HashSet%3CK,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#655-658\">Source</a><a href=\"#impl-FromIterator%3CK%3E-for-HashSet%3CK,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;K&gt; for <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#660\">Source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;T&gt;(iter: T) -&gt; <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = K&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<K>","saluki_common::collections::FastConcurrentHashSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashSet%3CK,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#194\">Source</a><a href=\"#impl-HashSet%3CK,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, S&gt; <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#216\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.with_hasher\" class=\"fn\">with_hasher</a>(hash_builder: S) -&gt; <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an empty <code>HashSet</code> which will use the given hash builder to hash\nkeys.</p>\n<p>Warning: <code>hash_builder</code> is normally randomly generated, and is designed\nto allow HashSets to be resistant to attacks that cause many collisions\nand very poor performance. Setting it manually using this function can\nexpose a DoS attack vector.</p>\n<p>The <code>hash_builder</code> passed should implement the <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\"><code>BuildHasher</code></a> trait for\nthe HashSet to be useful, see its documentation for details.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>papaya::HashSet;\n<span class=\"kw\">use </span>std::hash::RandomState;\n\n<span class=\"kw\">let </span>s = RandomState::new();\n<span class=\"kw\">let </span>set = HashSet::with_hasher(s);\nset.pin().insert(<span class=\"number\">1</span>);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_capacity_and_hasher\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#245\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.with_capacity_and_hasher\" class=\"fn\">with_capacity_and_hasher</a>(\n    capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    hash_builder: S,\n) -&gt; <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;</h4></section></summary><div class=\"docblock\"><p>Creates an empty <code>HashSet</code> with at least the specified capacity, using\n<code>hash_builder</code> to hash the keys.</p>\n<p>The set should be able to hold at least <code>capacity</code> elements before resizing.\nHowever, the capacity is an estimate, and the set may prematurely resize due\nto poor hash distribution. If <code>capacity</code> is 0, the hash set will not allocate.</p>\n<p>Warning: <code>hash_builder</code> is normally randomly generated, and is designed\nto allow HashSets to be resistant to attacks that cause many collisions\nand very poor performance. Setting it manually using this function can\nexpose a DoS attack vector.</p>\n<p>The <code>hasher</code> passed should implement the <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\"><code>BuildHasher</code></a> trait for\nthe HashSet to be useful, see its documentation for details.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>papaya::HashSet;\n<span class=\"kw\">use </span>std::hash::RandomState;\n\n<span class=\"kw\">let </span>s = RandomState::new();\n<span class=\"kw\">let </span>set = HashSet::with_capacity_and_hasher(<span class=\"number\">10</span>, s);\nset.pin().insert(<span class=\"number\">1</span>);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#261\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.pin\" class=\"fn\">pin</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSetRef.html\" title=\"struct papaya::set::HashSetRef\">HashSetRef</a>&lt;'_, K, S, <a class=\"struct\" href=\"https://docs.rs/seize/0.5.0/seize/guard/struct.LocalGuard.html\" title=\"struct seize::guard::LocalGuard\">LocalGuard</a>&lt;'_&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a pinned reference to the set.</p>\n<p>The returned reference manages a guard internally, preventing garbage collection\nfor as long as it is held. See the <a href=\"https://docs.rs/papaya/0.2.3/papaya/index.html#usage\" title=\"mod papaya\">crate-level documentation</a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pin_owned\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#277\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.pin_owned\" class=\"fn\">pin_owned</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSetRef.html\" title=\"struct papaya::set::HashSetRef\">HashSetRef</a>&lt;'_, K, S, <a class=\"struct\" href=\"https://docs.rs/seize/0.5.0/seize/guard/struct.OwnedGuard.html\" title=\"struct seize::guard::OwnedGuard\">OwnedGuard</a>&lt;'_&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a pinned reference to the set.</p>\n<p>Unlike <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#method.pin\" title=\"method papaya::set::HashSet::pin\"><code>HashSet::pin</code></a>, the returned reference implements <code>Send</code> and <code>Sync</code>,\nallowing it to be held across <code>.await</code> points in work-stealing schedulers.\nThis is especially useful for iterators.</p>\n<p>The returned reference manages a guard internally, preventing garbage collection\nfor as long as it is held. See the <a href=\"https://docs.rs/papaya/0.2.3/papaya/index.html#usage\" title=\"mod papaya\">crate-level documentation</a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.guard\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#289\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.guard\" class=\"fn\">guard</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/seize/0.5.0/seize/guard/struct.LocalGuard.html\" title=\"struct seize::guard::LocalGuard\">LocalGuard</a>&lt;'_&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a guard for use with this set.</p>\n<p>Note that holding on to a guard prevents garbage collection.\nSee the <a href=\"https://docs.rs/papaya/0.2.3/papaya/index.html#usage\" title=\"mod papaya\">crate-level documentation</a> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.owned_guard\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#302\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.owned_guard\" class=\"fn\">owned_guard</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/seize/0.5.0/seize/guard/struct.OwnedGuard.html\" title=\"struct seize::guard::OwnedGuard\">OwnedGuard</a>&lt;'_&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an owned guard for use with this set.</p>\n<p>Owned guards implement <code>Send</code> and <code>Sync</code>, allowing them to be held across\n<code>.await</code> points in work-stealing schedulers. This is especially useful\nfor iterators.</p>\n<p>Note that holding on to a guard prevents garbage collection.\nSee the <a href=\"https://docs.rs/papaya/0.2.3/papaya/index.html#usage\" title=\"mod papaya\">crate-level documentation</a> for details.</p>\n</div></details></div></details>",0,"saluki_common::collections::FastConcurrentHashSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashSet%3CK,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#307-310\">Source</a><a href=\"#impl-HashSet%3CK,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, S&gt; <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#326\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of entries in the set.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>papaya::HashSet;\n\n<span class=\"kw\">let </span>set = HashSet::new();\n\nset.pin().insert(<span class=\"number\">1</span>);\nset.pin().insert(<span class=\"number\">2</span>);\n<span class=\"macro\">assert!</span>(set.len() == <span class=\"number\">2</span>);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#343\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the set is empty. Otherwise returns <code>false</code>.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>papaya::HashSet;\n\n<span class=\"kw\">let </span>set = HashSet::new();\n<span class=\"macro\">assert!</span>(set.is_empty());\nset.pin().insert(<span class=\"string\">\"a\"</span>);\n<span class=\"macro\">assert!</span>(!set.is_empty());</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#368-370\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.contains\" class=\"fn\">contains</a>&lt;Q&gt;(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>, guard: &amp;impl <a class=\"trait\" href=\"https://docs.rs/seize/0.5.0/seize/guard/trait.Guard.html\" title=\"trait seize::guard::Guard\">Guard</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.2/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the set contains a value for the specified key.</p>\n<p>The key may be any borrowed form of the set’s key type, but\n<a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\"><code>Hash</code></a> and <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\"><code>Eq</code></a> on the borrowed form <em>must</em> match those for\nthe key type.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>papaya::HashSet;\n\n<span class=\"kw\">let </span>set = HashSet::new();\nset.pin().insert(<span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(set.pin().contains(<span class=\"kw-2\">&amp;</span><span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(set.pin().contains(<span class=\"kw-2\">&amp;</span><span class=\"number\">2</span>), <span class=\"bool-val\">false</span>);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#395-397\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.get\" class=\"fn\">get</a>&lt;'g, Q&gt;(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>, guard: &amp;'g impl <a class=\"trait\" href=\"https://docs.rs/seize/0.5.0/seize/guard/trait.Guard.html\" title=\"trait seize::guard::Guard\">Guard</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'g K</a>&gt;<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.2/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns a reference to the value corresponding to the key.</p>\n<p>The key may be any borrowed form of the set’s key type, but\n<a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\"><code>Hash</code></a> and <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\"><code>Eq</code></a> on the borrowed form <em>must</em> match those for\nthe key type.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>papaya::HashSet;\n\n<span class=\"kw\">let </span>set = HashSet::new();\nset.pin().insert(<span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(set.pin().get(<span class=\"kw-2\">&amp;</span><span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(set.pin().get(<span class=\"kw-2\">&amp;</span><span class=\"number\">2</span>), <span class=\"prelude-val\">None</span>);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#429\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;self, key: K, guard: &amp;impl <a class=\"trait\" href=\"https://docs.rs/seize/0.5.0/seize/guard/trait.Guard.html\" title=\"trait seize::guard::Guard\">Guard</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Inserts a value into the set.</p>\n<p>If the set did not have this key present, <code>true</code> is returned.</p>\n<p>If the set did have this key present, <code>false</code> is returned and the old\nvalue is not updated. This matters for types that can be <code>==</code> without\nbeing identical. See the <a href=\"https://doc.rust-lang.org/std/collections/index.html#insert-and-complex-keys\">standard library documentation</a> for details.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>papaya::HashSet;\n\n<span class=\"kw\">let </span>set = HashSet::new();\n<span class=\"macro\">assert_eq!</span>(set.pin().insert(<span class=\"number\">37</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(set.pin().is_empty(), <span class=\"bool-val\">false</span>);\n\nset.pin().insert(<span class=\"number\">37</span>);\n<span class=\"macro\">assert_eq!</span>(set.pin().insert(<span class=\"number\">37</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.pin().get(<span class=\"kw-2\">&amp;</span><span class=\"number\">37</span>), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">37</span>));</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#455-457\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.remove\" class=\"fn\">remove</a>&lt;Q&gt;(&amp;self, key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Q</a>, guard: &amp;impl <a class=\"trait\" href=\"https://docs.rs/seize/0.5.0/seize/guard/trait.Guard.html\" title=\"trait seize::guard::Guard\">Guard</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://docs.rs/equivalent/1.0.2/equivalent/trait.Equivalent.html\" title=\"trait equivalent::Equivalent\">Equivalent</a>&lt;K&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class=\"docblock\"><p>Removes a key from the set, returning the value at the key if the key\nwas previously in the set.</p>\n<p>The key may be any borrowed form of the set’s key type, but\n<a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\"><code>Hash</code></a> and <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\"><code>Eq</code></a> on the borrowed form <em>must</em> match those for\nthe key type.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>papaya::HashSet;\n\n<span class=\"kw\">let </span>set = HashSet::new();\nset.pin().insert(<span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(set.pin().remove(<span class=\"kw-2\">&amp;</span><span class=\"number\">1</span>), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(set.pin().remove(<span class=\"kw-2\">&amp;</span><span class=\"number\">1</span>), <span class=\"bool-val\">false</span>);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reserve\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#486\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.reserve\" class=\"fn\">reserve</a>(&amp;self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, guard: &amp;impl <a class=\"trait\" href=\"https://docs.rs/seize/0.5.0/seize/guard/trait.Guard.html\" title=\"trait seize::guard::Guard\">Guard</a>)</h4></section></summary><div class=\"docblock\"><p>Tries to reserve capacity for <code>additional</code> more elements to be inserted\nin the <code>HashSet</code>.</p>\n<p>After calling this method, the set should be able to hold at least <code>capacity</code> elements\nbefore resizing. However, the capacity is an estimate, and the set may prematurely resize\ndue to poor hash distribution. The collection may also reserve more space to avoid frequent\nreallocations.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the new allocation size overflows <code>usize</code>.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>papaya::HashSet;\n\n<span class=\"kw\">let </span>set: HashSet&lt;<span class=\"kw-2\">&amp;</span>str&gt; = HashSet::new();\nset.pin().reserve(<span class=\"number\">10</span>);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#508\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;self, guard: &amp;impl <a class=\"trait\" href=\"https://docs.rs/seize/0.5.0/seize/guard/trait.Guard.html\" title=\"trait seize::guard::Guard\">Guard</a>)</h4></section></summary><div class=\"docblock\"><p>Clears the set, removing all values.</p>\n<p>Note that this method will block until any in-progress resizes are\ncompleted before proceeding. See the <a href=\"https://docs.rs/papaya/0.2.3/papaya/index.html#consistency\" title=\"mod papaya\">consistency</a>\nsection for details.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>papaya::HashSet;\n\n<span class=\"kw\">let </span>set = HashSet::new();\n\nset.pin().insert(<span class=\"number\">1</span>);\nset.pin().clear();\n<span class=\"macro\">assert!</span>(set.pin().is_empty());</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#536-538\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.retain\" class=\"fn\">retain</a>&lt;F&gt;(&amp;mut self, f: F, guard: &amp;impl <a class=\"trait\" href=\"https://docs.rs/seize/0.5.0/seize/guard/trait.Guard.html\" title=\"trait seize::guard::Guard\">Guard</a>)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;K</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class=\"docblock\"><p>Retains only the elements specified by the predicate.</p>\n<p>In other words, remove all values <code>v</code> for which <code>f(&amp;v)</code> returns <code>false</code>.\nThe elements are visited in unsorted (and unspecified) order.</p>\n<p>Note the function may be called more than once for a given key if its value is\nconcurrently modified during removal.</p>\n<p>Additionally, this method will block until any in-progress resizes are\ncompleted before proceeding. See the <a href=\"https://docs.rs/papaya/0.2.3/papaya/index.html#consistency\" title=\"mod papaya\">consistency</a>\nsection for details.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>papaya::HashSet;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>set: HashSet&lt;i32&gt; = (<span class=\"number\">0</span>..<span class=\"number\">8</span>).collect();\nset.pin().retain(|<span class=\"kw-2\">&amp;</span>v| v % <span class=\"number\">2 </span>== <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(set.len(), <span class=\"number\">4</span>);\n<span class=\"macro\">assert_eq!</span>(set.pin().contains(<span class=\"kw-2\">&amp;</span><span class=\"number\">1</span>), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(set.pin().contains(<span class=\"kw-2\">&amp;</span><span class=\"number\">2</span>), <span class=\"bool-val\">true</span>);</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#564-566\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html#tymethod.iter\" class=\"fn\">iter</a>&lt;'g, G&gt;(&amp;self, guard: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'g G</a>) -&gt; Iter&lt;'g, K, G&gt;<div class=\"where\">where\n    G: <a class=\"trait\" href=\"https://docs.rs/seize/0.5.0/seize/guard/trait.Guard.html\" title=\"trait seize::guard::Guard\">Guard</a>,</div></h4></section></summary><div class=\"docblock\"><p>An iterator visiting all values in arbitrary order.</p>\n<p>Note that this method will block until any in-progress resizes are\ncompleted before proceeding. See the <a href=\"https://docs.rs/papaya/0.2.3/papaya/index.html#consistency\" title=\"mod papaya\">consistency</a>\nsection for details.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>papaya::HashSet;\n\n<span class=\"kw\">let </span>set = HashSet::from([\n    <span class=\"string\">\"a\"</span>,\n    <span class=\"string\">\"b\"</span>,\n    <span class=\"string\">\"c\"\n</span>]);\n\n<span class=\"kw\">for </span>val <span class=\"kw\">in </span>set.pin().iter() {\n    <span class=\"macro\">println!</span>(<span class=\"string\">\"val: {val}\"</span>);\n}</code></pre></div></div></details></div></details>",0,"saluki_common::collections::FastConcurrentHashSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-HashSet%3CK,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#574-577\">Source</a><a href=\"#impl-PartialEq-for-HashSet%3CK,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#579\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","saluki_common::collections::FastConcurrentHashSet"],["<section id=\"impl-Eq-for-HashSet%3CK,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#591-594\">Source</a><a href=\"#impl-Eq-for-HashSet%3CK,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,</div></h3></section>","Eq","saluki_common::collections::FastConcurrentHashSet"],["<section id=\"impl-Send-for-HashSet%3CK,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#24\">Source</a><a href=\"#impl-Send-for-HashSet%3CK,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section>","Send","saluki_common::collections::FastConcurrentHashSet"],["<section id=\"impl-Sync-for-HashSet%3CK,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/papaya/0.2.3/src/papaya/set.rs.html#25\">Source</a><a href=\"#impl-Sync-for-HashSet%3CK,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"https://docs.rs/papaya/0.2.3/papaya/set/struct.HashSet.html\" title=\"struct papaya::set::HashSet\">HashSet</a>&lt;K, S&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section>","Sync","saluki_common::collections::FastConcurrentHashSet"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[44620]}